// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is a mock-mock server. Manage mock-mocks for motivated people.",
    "title": "mock-mock",
    "termsOfService": "TBD",
    "contact": {
      "email": "TBD@gmaiil.com"
    },
    "license": {
      "name": "TBD",
      "url": "http://TBD.html"
    },
    "version": "0.0.1"
  },
  "host": "mock-mock.swagger.io",
  "basePath": "/v2",
  "paths": {
    "/mock": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "mock-mock"
        ],
        "summary": "Request any mock-mock action",
        "parameters": [
          {
            "description": "Slack information object, requested from slash command.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SlackRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SlackResponse"
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    }
  },
  "definitions": {
    "SlackRequest": {
      "type": "object",
      "properties": {
        "channel_id": {
          "type": "string"
        },
        "channel_name": {
          "type": "string"
        },
        "command": {
          "type": "string"
        },
        "response_url": {
          "type": "string"
        },
        "team_domain": {
          "type": "string"
        },
        "team_id": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "trigger_id": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        },
        "user_name": {
          "type": "string"
        }
      }
    },
    "SlackResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "description": "manage mock-mocks. start, end, and performances.",
      "name": "mock-mock"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "This is a mock-mock server. Manage mock-mocks for motivated people.",
    "title": "mock-mock",
    "termsOfService": "TBD",
    "contact": {
      "email": "TBD@gmaiil.com"
    },
    "license": {
      "name": "TBD",
      "url": "http://TBD.html"
    },
    "version": "0.0.1"
  },
  "host": "mock-mock.swagger.io",
  "basePath": "/v2",
  "paths": {
    "/mock": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "mock-mock"
        ],
        "summary": "Request any mock-mock action",
        "parameters": [
          {
            "description": "Slack information object, requested from slash command.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SlackRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SlackResponse"
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    }
  },
  "definitions": {
    "SlackRequest": {
      "type": "object",
      "properties": {
        "channel_id": {
          "type": "string"
        },
        "channel_name": {
          "type": "string"
        },
        "command": {
          "type": "string"
        },
        "response_url": {
          "type": "string"
        },
        "team_domain": {
          "type": "string"
        },
        "team_id": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "trigger_id": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        },
        "user_name": {
          "type": "string"
        }
      }
    },
    "SlackResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "description": "manage mock-mocks. start, end, and performances.",
      "name": "mock-mock"
    }
  ]
}`))
}
