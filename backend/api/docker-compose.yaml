version: "3.7"
services:

  mockmock-server:
    build:
      context: ./
      # dockerfile: Dockerfile
      cache_from:
        - mockmock-server:latest
    image: mockmock-server:latest
    container_name: mockmock
    environment:
      - PORT=8080
    # need to be imple db-access
    #   - db-endpoint=db
    ports:
      - "8080:8080"
    depends_on:
      - db
    # networks: 
    #   - backend
    # deploy options are only available with docker swarm
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

  # db:
  #   image: postgres:11
  #   volumes:
  #     - db-data:/var/lib/postgresql/data
  #   networks:
  #     - backend
  #   deploy:
  #     mode: global
  #     placement:
  #       constraints: [node.role == manager]

  db:
    image: postgres:11
    container_name: mockmock-db
    # ports:
    #   - 5432:5432
    volumes:
      - ./infra/postgres/init:/docker-entrypoint-initdb.d
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    hostname: postgres
    restart: always
    user: root
    # networks:
    #   - backend
    deploy:
      mode: global
      placement:
        constraints: [node.role == manager]


# networks:
#   backend:

volumes:
  db-data: